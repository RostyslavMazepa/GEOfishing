
# create and drop tables and sequences, loads import.sql

#server port for spring boot
server.port = 8081
management.port = 8082
management.server.address=127.0.0.1


# db settings
spring.datasource.username = fisher
spring.datasource.password = fisher
spring.jpa.properties.hibernate.default_schema = fishingapp

#spring.mvc.dispatch-options-request = true

#postgis
#spring.datasource.url = jdbc:postgresql_postGIS://dev.geosportfishing.top:5432/geofishing
#postgis driver
#spring.datasource.driver-class-name=org.postgis.DriverWrapper
#postgis dialect
#spring.jpa.properties.hibernate.dialect=org.hibernate.spatial.dialect.postgis.PostgisDialect

#postgres
spring.datasource.url = jdbc:postgresql://dev.geosportfishing.top:5432/geofishing
#postgres driver
spring.datasource.driver-class-name=org.postgresql.Driver
#postgres dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true

#ddl-generation
spring.jpa.generate-ddl=true
spring.jpa.properties.javax.persistence.schema-generation.create-source = metadata
spring.jpa.properties.javax.persistence.schema-generation.scripts.action = create
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target = create.sql



# HikariCP settings
# spring.datasource.hikari.*
#spring.datasource.hikari.connection-timeout=60000
#spring.datasource.hikari.maximum-pool-size=5

# logging
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.type.descriptor.sql=trace
logging.level.=error


#Security
security.oauth2.resource.filter-order=3

security.signing-key=yourkey
security.encoding-strength=256
security.security-realm=yourrealm

security.jwt.client-id=yourid
security.jwt.client-secret=yoursercret
security.jwt.grant-type=password
security.jwt.scope-read=read
security.jwt.scope-write=write
security.jwt.resource-ids=yourresourceid

